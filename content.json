{"meta":{"title":"Amumu233","subtitle":null,"description":null,"author":"amumu233","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"node之path模块","slug":"node之path模块","date":"2017-11-20T02:22:09.000Z","updated":"2017-11-20T09:01:05.697Z","comments":true,"path":"2017/11/20/node之path模块/","link":"","permalink":"http://yoursite.com/2017/11/20/node之path模块/","excerpt":"node path 模块 path 模块的方法和属性的 解释 及 简单示例","text":"node path 模块 path 模块的方法和属性的 解释 及 简单示例 引用1var path = require('path'); path.normalize(path) 路径解析,得到规范化的路径格式 window系统,分隔符 ‘ \\ ‘ Unix系统, 分隔符 ‘ / ‘ .. 返回上一级 \\ 与 // 统一被替换 path.join([path1],[path2]…[pathn]) 结合路径 合并路径 注意: 返回的路径的最后并不会带有目录分隔符 path.resolve(path) 以应用程序为起点,解析出一个绝对路径 path.relative(from,to) 获取两路径之间的相对关系 path.dirname(path) 获取路径中的目录名 注意 返回的字符串的最后并没有路径分隔符 12console.log(path.dirname('a/b/c/d/me.png'));// a/b/c/d path.basename(path,[ext]) 获取路径中的文件名 后缀是可选的,使用’.ext’的方式来匹配则返回值中不包括后缀名12console.log(path.basename('a/b/c/d/me.png','.png'));// me path.extname(path) 获取路径中的扩展名 如果没有 则返回空 path.sep 属性返回操作系统中的文件分隔符window 下 返回 ‘ \\\\ ‘Unix下 返回 ‘ / ‘ path.delimiter 属性 返回操作系统中的目录分隔符window 下 返回 ‘ ; ‘Unix 下 返回 ‘ : ‘","categories":[{"name":"note","slug":"note","permalink":"http://yoursite.com/categories/note/"}],"tags":[{"name":"node","slug":"node","permalink":"http://yoursite.com/tags/node/"},{"name":"path","slug":"path","permalink":"http://yoursite.com/tags/path/"}]}]}